{"ast":null,"code":"var _jsxFileName = \"/Users/antonellamle/Documents/Chat-App/public/src/components/Contacts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useStat, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Contacts({\n  contacts,\n  currentUser\n}) {\n  _s();\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useStat(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserImage(currentUser.avatarImage);\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n  const chnageCurrentChat = (index, contact) => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserImage && currentUserName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"MingleChat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Contacts, \"XlMgAc9c8wlaYbvfj1DZ21PMrq4=\", false, function () {\n  return [useStat];\n});\n_c = Contacts;\nconst Container = styled.div``;\n_c2 = Container;\nexport default Contacts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useStat","useEffect","useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Contacts","contacts","currentUser","_s","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","avatarImage","username","chnageCurrentChat","index","contact","children","Container","className","src","Logo","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/antonellamle/Documents/Chat-App/public/src/components/Contacts.jsx"],"sourcesContent":["import React,{useStat, useEffect, useState} from 'react'\nimport styled from 'styled-components';\n\nfunction Contacts({ contacts, currentUser }) {\nconst [currentUserName, setCurrentUserName] = useState(undefined);\nconst [currentUserImage, setCurrentUserImage] = useState(undefined);\n const [currentSelected, setCurrentSelected] = useStat(undefined); \n\nuseEffect(()=>{\n    if(currentUser){\n        setCurrentUserImage(currentUser.avatarImage);\n        setCurrentUserName(currentUser.username);\n    }\n}, [currentUser]);\n\nconst chnageCurrentChat = (index, contact) => {};\n\n\n\n  return <>\n   {\n    currentUserImage && currentUserName && (\n        <Container>\n            <div className=\"brand\">\n                <img src={Logo} alt=\"logo\" />\n                <h3>MingleChat</h3>\n            </div>\n            <div className=\"contacts\"></div>\n        </Container>\n    )\n   }\n    </>\n  \n}\n\nconst Container = styled.div``;\n\nexport default Contacts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC;EACjE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAACY,SAAS,CAAC;EAClE,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,OAAO,CAACc,SAAS,CAAC;EAEjEb,SAAS,CAAC,MAAI;IACV,IAAGS,WAAW,EAAC;MACXM,mBAAmB,CAACN,WAAW,CAACS,WAAW,CAAC;MAC5CN,kBAAkB,CAACH,WAAW,CAACU,QAAQ,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;EAEjB,MAAMW,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK,CAAC,CAAC;EAI9C,oBAAOlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,EAELT,gBAAgB,IAAIH,eAAe,iBAC/BP,OAAA,CAACoB,SAAS;MAAAD,QAAA,gBACNnB,OAAA;QAAKqB,SAAS,EAAC,OAAO;QAAAF,QAAA,gBAClBnB,OAAA;UAAKsB,GAAG,EAAEC,IAAK;UAACC,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7B5B,OAAA;UAAAmB,QAAA,EAAI;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACN5B,OAAA;QAAKqB,SAAS,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EACd,gBAEC,CAAC;AAEP;AAACtB,EAAA,CA9BQH,QAAQ;EAAA,QAG8BR,OAAO;AAAA;AAAAkC,EAAA,GAH7C1B,QAAQ;AAgCjB,MAAMiB,SAAS,GAAGtB,MAAM,CAACgC,GAAI,EAAC;AAACC,GAAA,GAAzBX,SAAS;AAEf,eAAejB,QAAQ;AAAC,IAAA0B,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}